#ifndef UTILS_H
#define UTILS_H

using namespace std;

/**********************************************************************/
/***        Include files                                           ***/
/**********************************************************************/

/**********************************************************************/
/***        Local Include files                                     ***/
/**********************************************************************/

/**********************************************************************/
/***        Macro Definitions                                       ***/
/**********************************************************************/


#ifndef UTIL_H
#define UTIL_H

#ifndef htons
#define htons(x) ( ((x)<< 8 & 0xFF00) | \
                   ((x)>> 8 & 0x00FF) )
#endif

#ifndef ntohs
#define ntohs(x) htons(x)
#endif

#ifndef htonl
#define htonl(x) ( ((x)<<24 & 0xFF000000UL) | \
                   ((x)<< 8 & 0x00FF0000UL) | \
                   ((x)>> 8 & 0x0000FF00UL) | \
                   ((x)>>24 & 0x000000FFUL) )
#endif

#ifndef ntohl
#define ntohl(x) htonl(x)
#endif

#endif

/**********************************************************************/
/***        Type Definitions                                        ***/
/**********************************************************************/

/**********************************************************************/
/***        Forward Declarations                                    ***/
/**********************************************************************/


/**
 * Computes the CRC-16 bit one-complement. This is needed as a subroutine
 * for computing the UDP Checksum.
 *
 * @param [in] data The source array of bytes to compute the checksum.
 *
 * @param [in] len The length of data. It can be an odd number too.
 *
 * @return The computed CRC-16 in one's complement.
 *
 * \note Dependencies #include <stdint.h>
 * \note Dependencies #include <arpa/inet.h>
 *
 * \note Reference: https://barrgroup.com/Embedded-Systems/How-To/Additive-Checksums
 */
uint16_t crc16(const uint8_t *data, size_t len);

/**********************************************************************/
/***        Constants                                               ***/
/**********************************************************************/

/**********************************************************************/
/***        Global Variables                                        ***/
/**********************************************************************/

/**********************************************************************/
/***        Static Variables                                        ***/
/**********************************************************************/

/**********************************************************************/
/***        Static Functions                                        ***/
/**********************************************************************/

/**********************************************************************/
/***        Public Functions                                        ***/
/**********************************************************************/

/**********************************************************************/
/***        main() setup() loop()                                   ***/
/**********************************************************************/

/**********************************************************************/
/***        END OF FILE                                             ***/
/**********************************************************************/

/*
 * Deprecated or testing functions start here.
 */

#endif // UTILS_H
